{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RideAccordion from \"./RideAccordion\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RidesList = function RidesList(_ref) {\n  var rides = _ref.rides,\n    direction = _ref.direction;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedRide = _useState2[0],\n    setExpandedRide = _useState2[1];\n  var handleToggle = function handleToggle(rideId) {\n    setExpandedRide(expandedRide === rideId ? null : rideId);\n  };\n  console.log('RidesList: Received direction:', direction, 'Type:', typeof direction);\n  console.log('RidesList: Received rides count:', rides ? rides.length : 0);\n  console.log('RidesList: Sample ride:', rides && rides.length > 0 ? rides[0] : null);\n  var formatDirection = function formatDirection(dir) {\n    if (!dir) return '';\n    var dirStr = typeof dir === 'string' ? dir : String(dir);\n    return dirStr.charAt(0).toUpperCase() + dirStr.slice(1);\n  };\n  if (!rides || rides.length === 0) {\n    return _jsx(View, {\n      style: styles.emptyContainer,\n      children: _jsx(Text, {\n        style: styles.emptyText,\n        children: \"No rides available\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [direction && _jsxs(View, {\n      style: styles.directionHeader,\n      children: [_jsx(Text, {\n        style: styles.directionText,\n        children: formatDirection(direction)\n      }), _jsxs(Text, {\n        style: styles.ridesCount,\n        children: [rides.length, \" ride\", rides.length !== 1 ? 's' : '']\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scrollContainer,\n      showsVerticalScrollIndicator: false,\n      children: rides.map(function (ride, index) {\n        return _jsx(RideAccordion, {\n          ride: ride,\n          expanded: expandedRide === ride.rideId,\n          onToggle: function onToggle() {\n            return handleToggle(ride.rideId);\n          }\n        }, ride.rideId || `ride-${index}`);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollContainer: {\n    flex: 1,\n    paddingVertical: 8\n  },\n  directionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef'\n  },\n  directionText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  ridesCount: {\n    fontSize: 14,\n    color: '#666',\n    backgroundColor: '#f8f9fa',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 32\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center'\n  }\n});\nexport default RidesList;","map":{"version":3,"names":["React","useState","View","ScrollView","Text","StyleSheet","RideAccordion","jsx","_jsx","jsxs","_jsxs","RidesList","_ref","rides","direction","_useState","_useState2","_slicedToArray","expandedRide","setExpandedRide","handleToggle","rideId","console","log","length","formatDirection","dir","dirStr","String","charAt","toUpperCase","slice","style","styles","emptyContainer","children","emptyText","container","directionHeader","directionText","ridesCount","scrollContainer","showsVerticalScrollIndicator","map","ride","index","expanded","onToggle","create","flex","backgroundColor","paddingVertical","flexDirection","justifyContent","alignItems","paddingHorizontal","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","borderRadius","padding","textAlign"],"sources":["/Users/alen/Develop/bus-schedule-app/Autotrolej/src/components/RidesList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, ScrollView, Text, StyleSheet } from 'react-native';\nimport RideAccordion from './RideAccordion';\n\nconst RidesList = ({ rides, direction }) => {\n\tconst [expandedRide, setExpandedRide] = useState(null);\n\n\tconst handleToggle = (rideId) => {\n\t\tsetExpandedRide(expandedRide === rideId ? null : rideId);\n\t};\n\n\tconsole.log('RidesList: Received direction:', direction, 'Type:', typeof direction);\n\tconsole.log('RidesList: Received rides count:', rides ? rides.length : 0);\n\tconsole.log('RidesList: Sample ride:', rides && rides.length > 0 ? rides[0] : null);\n\n\tconst formatDirection = (dir) => {\n\t\tif (!dir) return '';\n\t\t// Ensure dir is a string\n\t\tconst dirStr = typeof dir === 'string' ? dir : String(dir);\n\t\treturn dirStr.charAt(0).toUpperCase() + dirStr.slice(1);\n\t};\n\n\tif (!rides || rides.length === 0) {\n\t\treturn (\n\t\t\t<View style={styles.emptyContainer}>\n\t\t\t\t<Text style={styles.emptyText}>No rides available</Text>\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t{direction && (\n\t\t\t\t<View style={styles.directionHeader}>\n\t\t\t\t\t<Text style={styles.directionText}>\n\t\t\t\t\t\t{formatDirection(direction)}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text style={styles.ridesCount}>\n\t\t\t\t\t\t{rides.length} ride{rides.length !== 1 ? 's' : ''}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t)}\n\t\t\t\n\t\t\t<ScrollView \n\t\t\t\tstyle={styles.scrollContainer}\n\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t>\n\t\t\t\t{rides.map((ride, index) => (\n\t\t\t\t\t<RideAccordion\n\t\t\t\t\t\tkey={ride.rideId || `ride-${index}`}\n\t\t\t\t\t\tride={ride}\n\t\t\t\t\t\texpanded={expandedRide === ride.rideId}\n\t\t\t\t\t\tonToggle={() => handleToggle(ride.rideId)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ScrollView>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f5f5f5',\n\t},\n\tscrollContainer: {\n\t\tflex: 1,\n\t\tpaddingVertical: 8,\n\t},\n\tdirectionHeader: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingHorizontal: 16,\n\t\tpaddingVertical: 12,\n\t\tbackgroundColor: '#fff',\n\t\tborderBottomWidth: 1,\n\t\tborderBottomColor: '#e9ecef',\n\t},\n\tdirectionText: {\n\t\tfontSize: 18,\n\t\tfontWeight: 'bold',\n\t\tcolor: '#333',\n\t},\n\tridesCount: {\n\t\tfontSize: 14,\n\t\tcolor: '#666',\n\t\tbackgroundColor: '#f8f9fa',\n\t\tpaddingHorizontal: 12,\n\t\tpaddingVertical: 4,\n\t\tborderRadius: 12,\n\t},\n\temptyContainer: {\n\t\tflex: 1,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpadding: 32,\n\t},\n\temptyText: {\n\t\tfontSize: 16,\n\t\tcolor: '#666',\n\t\ttextAlign: 'center',\n\t},\n});\n\nexport default RidesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}